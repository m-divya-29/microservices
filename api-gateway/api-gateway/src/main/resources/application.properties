spring.application.name=api-gateway
server.port=9000
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-microservices-security-realm
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.urls[0].name=Product Service
springdoc.swagger-ui.urls[0].url=/aggregate/product-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Order Service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Inventory Service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v3/api-docs

#Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j Properties
## enable health indicators for actuator.
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true

## monitor a fixed number of calls - count based not time based.
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED

## watches the last 10 calls. If enough of those calls fail, the circuit may "open".
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
## If 50% or more of the last 10 calls fail, the circuit opens.
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
## circuit once opened, stays open for 5 seconds. and tries to move to half-open state to test if things are working.
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
## When in half-open state, it allows 3 test calls. If these succeed, the circuit closes (back to normal). If they fail, it re-opens.
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
## switches from open to half-open after the wait duration.
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
## don't calculate failure rates until at least 5 calls have been made.
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

#Resilience4j timeout properties
## If a call takes longer than 3 seconds, it will be automatically timed out.
resilience4j.timelimiter.configs.default.timeout-duration=3s

#Resilience4j retry properties
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=2s